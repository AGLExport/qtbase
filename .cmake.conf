set(QT_REPO_MODULE_VERSION "6.2.0")
set(QT_REPO_MODULE_PRERELEASE_VERSION_SEGMENT "alpha1")

# Minimum required CMake version for building Qt.
set(QT_SUPPORTED_MIN_CMAKE_VERSION_FOR_BUILDING_QT_SHARED "3.16")
set(QT_SUPPORTED_MIN_CMAKE_VERSION_FOR_BUILDING_QT_STATIC "3.21")

# Minimum required CMake version for using Qt in a user project.
# This might be different in the future, e.g. be lower than the requirement for
# building Qt.
set(QT_SUPPORTED_MIN_CMAKE_VERSION_FOR_USING_QT_SHARED "3.16")
set(QT_SUPPORTED_MIN_CMAKE_VERSION_FOR_USING_QT_STATIC "3.21")

# Minimum CMake version that needs to appear in the cmake_minimum_required() call of a Qt user
# project, so that all policies defined up to the specified CMake version are using NEW behavior.
# With a value of 3.16, all policies CMP0000-CMP0097 will use NEW behavior.
#
# For now, both shared and static Qt builds share the same minimum.
set(QT_SUPPORTED_MIN_CMAKE_VERSION_FOR_USING_QT_SHARED_IN_CMAKE_MIN_REQUIRED "3.16")
set(QT_SUPPORTED_MIN_CMAKE_VERSION_FOR_USING_QT_STATIC_IN_CMAKE_MIN_REQUIRED "3.16")

# Policy settings for commands defined by qtbase. These will also be injected
# into the top level policy scope of each Qt module when building Qt so that
# modules have the same policy settings as qtbase by default. They can be
# overridden by individual Qt modules in their own .cmake.conf files if needed.
#
# NOTE: These two values are also hard-coded in QtBuildInternalsConfig.cmake
#       because that file is used in-place by a superbuild, so there is no
#       opportunity for substituting the values from here. Keep both locations
#       in sync.
set(QT_MIN_NEW_POLICY_CMAKE_VERSION "3.16")
set(QT_MAX_NEW_POLICY_CMAKE_VERSION "3.21")
